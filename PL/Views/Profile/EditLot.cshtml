@model PL.Models.LotViewModel

@{
    ViewBag.Title = "Edit lot";
    IEnumerable<SelectListItem> categoriesList = ViewBag.Categories;
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}

<br />
@using (Html.BeginForm("EditLot", "Profile", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Price)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.ExpirationTime)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, 10, 40, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, categoriesList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" accept="image/jpeg,image/png" name="uploadImage" value="Image" class="" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" style = "margin-right:20px; background-color: #42ba1d"/>
                @Html.ActionLink("Cancel", "MyLots", "Profile", new { }, new { id = "mylots", @class = "btn btn-default", @style = "background-color: #b91818; margin-right:0px" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

